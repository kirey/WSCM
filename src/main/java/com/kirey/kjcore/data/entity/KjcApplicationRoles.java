package com.kirey.kjcore.data.entity;
// Generated 20-Oct-2016 11:22:32 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.springframework.security.core.GrantedAuthority;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.kirey.kjcore.data.annotations.CreationUser;
import com.kirey.kjcore.data.annotations.UpdateUser;

/**
 * KjcApplicationRoles generated by hbm2java
 */
@Entity
@Table(name = "KJC_APPLICATION_ROLES", uniqueConstraints = @UniqueConstraint(columnNames = "NAME") )
public class KjcApplicationRoles implements java.io.Serializable, GrantedAuthority {

	private static final long serialVersionUID = -9184534794137801871L;
	private Integer id;
	@JsonIgnore
	private Integer utInsert;
	@JsonIgnore
	private Integer utUpdate;
	private String name;
	private Long timeout;
	private Date tsInsert;
	private Date tsUpdate;


	@JsonBackReference(value = "user_roles")
	private List<KjcUserAccounts> kjcUserAccountses = new ArrayList<KjcUserAccounts>(0);

	@JsonBackReference(value = "routes_roles")
	private List<KjcUrlRoutes> kjcUrlRouteses = new ArrayList<KjcUrlRoutes>(0);
	
	@JsonBackReference(value = "report_role")
	private List<KjcReports> kjcReportses = new ArrayList<KjcReports>();

	public KjcApplicationRoles() {
	}

	public KjcApplicationRoles(Integer id, String name, Long timeout, Integer utInsert, Date tsInsert, Integer utUpdate,
			Date tsUpdate) {
		this.id = id;
		this.name = name;
		this.timeout = timeout;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
	}

	public KjcApplicationRoles(Integer id, String name, Long timeout, Integer utInsert, Date tsInsert, Integer utUpdate,
			Date tsUpdate, List<KjcUrlRoutes> kjcUrlRouteses, List<KjcUserAccounts> kjcUserAccountses) {
		this.id = id;
		this.name = name;
		this.timeout = timeout;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.kjcUrlRouteses = kjcUrlRouteses;
		this.kjcUserAccountses = kjcUserAccountses;
	}

	@Id
	@SequenceGenerator(name = "role_gen", sequenceName = "SEQ_KJC_APPLICATION_ROLES", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "role_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NAME", unique = true, nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "TIMEOUT", nullable = false, scale = 0)
	public Long getTimeout() {
		return this.timeout;
	}

	public void setTimeout(Long timeout) {
		this.timeout = timeout;
	}

	@Column(name = "UT_INSERT", nullable = false, updatable = false, precision = 10, scale = 0)
	@CreationUser
	public Integer getUtInsert() {
		return this.utInsert;
	}

	public void setUtInsert(Integer utInsert) {
		this.utInsert = utInsert;
	}

	@Column(name = "TS_INSERT", nullable = false, updatable = false)
	@org.hibernate.annotations.CreationTimestamp
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "UT_UPDATE", nullable = false, precision = 10, scale = 0)
	@UpdateUser
	public Integer getUtUpdate() {
		return this.utUpdate;
	}

	public void setUtUpdate(Integer utUpdate) {
		this.utUpdate = utUpdate;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	@org.hibernate.annotations.UpdateTimestamp
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@ManyToMany
	@JoinTable(name = "KJC_ROLE_URL_ROUTES", joinColumns = {
			@JoinColumn(name = "KJC_APPLICATION_ROLE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "KJC_URL_ROUTE", nullable = false, updatable = false) })
	@LazyCollection(LazyCollectionOption.FALSE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcUrlRoutes> getKjcUrlRouteses() {
		return this.kjcUrlRouteses;
	}

	public void setKjcUrlRouteses(List<KjcUrlRoutes> kjcUrlRouteses) {
		this.kjcUrlRouteses = kjcUrlRouteses;
	}

	@ManyToMany//(fetch = FetchType.LAZY)
	@JoinTable(name = "KJC_USER_ROLES", joinColumns = {
			@JoinColumn(name = "KJC_APPLICATION_ROLE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "KJC_USER_ACCOUNT", nullable = false, updatable = false) })
//	@LazyCollection(LazyCollectionOption.FALSE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcUserAccounts> getKjcUserAccountses() {
		return this.kjcUserAccountses;
	}

	public void setKjcUserAccountses(List<KjcUserAccounts> kjcUserAccountses) {
		this.kjcUserAccountses = kjcUserAccountses;
	}
	
	
	@ManyToMany
	@JoinTable(name = "KJC_ROLE_REPORTS", joinColumns = {
			@JoinColumn(name = "KJC_APPLICATION_ROLE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "KJC_REPORT", nullable = false, updatable = false) })
	@LazyCollection(LazyCollectionOption.TRUE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcReports> getKjcReportses() {
		return kjcReportses;
	}

	public void setKjcReportses(List<KjcReports> kjcReportses) {
		this.kjcReportses = kjcReportses;
	}

	@Override
	@Transient
	public String getAuthority() {
		return this.name;
	}

}
