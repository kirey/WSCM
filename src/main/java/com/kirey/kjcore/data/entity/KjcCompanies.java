package com.kirey.kjcore.data.entity;
// Generated 20-Oct-2016 11:22:32 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.Lob;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.Type;
import org.hibernate.validator.constraints.NotBlank;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.kirey.kjcore.common.constants.ValidationErrorConstants;
import com.kirey.kjcore.data.annotations.CreationUser;
import com.kirey.kjcore.data.annotations.UpdateUser;

/**
 * KjcCompanies generated by hbm2java
 */
@Entity
@Table(name = "KJC_COMPANIES", uniqueConstraints = @UniqueConstraint(columnNames = "CODE"))
public class KjcCompanies implements java.io.Serializable {

	private static final long serialVersionUID = -3904478878577466785L;
	private Integer id;
	private String code;
	@NotBlank(message = ValidationErrorConstants.VALIDATION_FORMAL_COMPANY_DESCRIPTION_EMPTY)
	@Size(min = 1, max = 255, message = ValidationErrorConstants.VALIDATION_FORMAL_COMPANY_DESCRIPTION_TOO_LONG)
	private String description;
	@NotBlank(message = ValidationErrorConstants.VALIDATION_FORMAL_COMPANY_NAME_EMPTY)
	@Size(min = 1, max = 255, message = ValidationErrorConstants.VALIDATION_FORMAL_COMPANY_NAME_TOO_LONG)
	private String name;
	private Long passwordTimeout;
	private Integer utInsert;
	private Date tsInsert;
	private Integer utUpdate;
	private Date tsUpdate;
	private boolean flActive;
	private byte[] companyLogo;

	@JsonIgnore
	private List<KjcUserAccounts> kjcUserAccountses = new ArrayList<KjcUserAccounts>(0);
	
	@JsonIgnore
	private List<KjcCompanyCss> kjcCompanyCsses = new ArrayList<KjcCompanyCss>();
	
	@JsonIgnore
	private List<KjcReports> kjcReportses = new ArrayList<KjcReports>(0);

	public KjcCompanies() {
	}

	public KjcCompanies(Integer id, String code, String description, String name, Integer utInsert, Date tsInsert,
			Integer utUpdate, Date tsUpdate, boolean flActive) {
		this.id = id;
		this.code = code;
		this.description = description;
		this.name = name;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.flActive = flActive;

	}

	public KjcCompanies(Integer id, String code, String description, String name, Long passwordTimeout,Integer utInsert, Date tsInsert,
			Integer utUpdate, Date tsUpdate, boolean flActive, List<KjcCompanyCss> kjcCompanyCsses,
			List<KjcUserAccounts> kjcUserAccountses) {
		this.id = id;
		this.code = code;
		this.description = description;
		this.name = name;
		this.passwordTimeout = passwordTimeout;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.flActive = flActive;
		this.kjcCompanyCsses = kjcCompanyCsses;
		this.kjcUserAccountses = kjcUserAccountses;
	}

	@Id
	@SequenceGenerator(name = "idCompany_gen", sequenceName = "SEQ_KJC_COMPANIES", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "idCompany_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "CODE", unique = true, nullable = false, length = 50)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "DESCRIPTION", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "NAME", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "PASSWORD_TIMEOUT", nullable = true)
	public Long getPasswordTimeout() {
		return passwordTimeout;
	}

	public void setPasswordTimeout(Long passwordTimeout) {
		this.passwordTimeout = passwordTimeout;
	}
	
	@Column(name = "UT_INSERT", nullable = false, updatable = false, precision = 10, scale = 0)
	@CreationUser
	public Integer getUtInsert() {
		return this.utInsert;
	}

	public void setUtInsert(Integer utInsert) {
		this.utInsert = utInsert;
	}

	@Column(name = "TS_INSERT", nullable = false, updatable = false)
	@org.hibernate.annotations.CreationTimestamp
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "UT_UPDATE", nullable = false, precision = 10, scale = 0)
	@UpdateUser
	public Integer getUtUpdate() {
		return this.utUpdate;
	}

	public void setUtUpdate(Integer utUpdate) {
		this.utUpdate = utUpdate;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	@org.hibernate.annotations.UpdateTimestamp
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@Column(name = "FL_ACTIVE", nullable = false, precision = 1, scale = 0)
	public boolean isFlActive() {
		return this.flActive;
	}

	public void setFlActive(boolean flActive) {
		this.flActive = flActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "kjcCompanies")
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcUserAccounts> getKjcUserAccountses() {
		return this.kjcUserAccountses;
	}

	public void setKjcUserAccountses(List<KjcUserAccounts> kjcUserAccountses) {
		this.kjcUserAccountses = kjcUserAccountses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "kjcCompanies")
	@Cascade(value = CascadeType.MERGE)
	public List<KjcCompanyCss> getKjcCompanyCsses() {
		return kjcCompanyCsses;
	}

	public void setKjcCompanyCsses(List<KjcCompanyCss> kjcCompanyCsses) {
		this.kjcCompanyCsses = kjcCompanyCsses;
	}
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "KJC_COMPANY_REPORTS", joinColumns = {
			@JoinColumn(name = "KJC_COMPANY", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "KJC_REPORT", nullable = false, updatable = false) })
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcReports> getKjcReportses() {
		return kjcReportses;
	}

	public void setKjcReportses(List<KjcReports> kjcReportses) {
		this.kjcReportses = kjcReportses;
	}

	//@Lob // in case of use postgres database remove @Lob annotation
	@Column(name = "COMPANY_LOGO", nullable = true)
	@JsonIgnore
	public byte[] getCompanyLogo() {
		return companyLogo;
	}

	public void setCompanyLogo(byte[] companyLogo) {
		this.companyLogo = companyLogo;
	}

	
	
}
