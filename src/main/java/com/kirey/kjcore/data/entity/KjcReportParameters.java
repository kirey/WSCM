package com.kirey.kjcore.data.entity;
// Generated 14-Nov-2016 13:23:12 by Hibernate Tools 5.1.0.Beta1

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.kirey.kjcore.data.annotations.CreationUser;
import com.kirey.kjcore.data.annotations.UpdateUser;

/**
 * KjcReportParameters generated by hbm2java
 */
@Entity
@Table(name = "KJC_REPORT_PARAMETERS", uniqueConstraints = { @UniqueConstraint(columnNames = { "KJC_REPORT", "NAME" }),
		@UniqueConstraint(columnNames = { "KJC_REPORT", "KEY" }) })
public class KjcReportParameters implements java.io.Serializable {

	private static final long serialVersionUID = -7475604827093839813L;
	
	private Integer id;
	@JsonBackReference(value = "report_parameters")
	private KjcReports kjcReports;
	private String name;
	private Boolean isMandatory;
	private Integer minValue;
	private Integer maxValue;
	private String defaultValue;
	private String position;
	private String type;
	private String description;
	private KjcReportParameters dependencyParameter;
	private String parameterDependencyFkColumn;
	private String dependencyParamName;
	private Integer utInsert;
	private Date tsInsert;
	private Integer utUpdate;
	private Date tsUpdate;
	private String key;
	private String dbTable;
	private String dbColumn;
	private List<KjcReportBookingParameters> kjcReportBookingParameterses = new ArrayList<KjcReportBookingParameters>(0);
	private List<KjcReportParameters> kjcReportParameterses = new ArrayList<KjcReportParameters>(0);
	@Transient
	private Map<BigDecimal, String> dropdownList = new HashMap<BigDecimal, String>();
	@Transient
	private String value;
	
	
	public KjcReportParameters() {}

	public KjcReportParameters(Integer id, KjcReports kjcReports, String name, String type, Integer utInsert,
			Date tsInsert, Integer utUpdate, Date tsUpdate, String key) {
		this.id = id;
		this.kjcReports = kjcReports;
		this.name = name;
		this.type = type;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.key = key;
	}

	public KjcReportParameters(Integer id, KjcReports kjcReports, String name,
			Boolean isMandatory, Integer minValue, Integer maxValue, String defaultValue, String position,
			String type, String description, Integer utInsert, Date tsInsert, Integer utUpdate, Date tsUpdate,
			String key, List<KjcReportBookingParameters> kjcReportBookingParameterses) {
		this.id = id;
		this.kjcReports = kjcReports;
		this.name = name;
		this.isMandatory = isMandatory;
		this.minValue = minValue;
		this.maxValue = maxValue;
		this.defaultValue = defaultValue;
		this.position = position;
		this.type = type;
		this.description = description;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.key = key;
		this.kjcReportBookingParameterses = kjcReportBookingParameterses;
	}

	@Id
	@SequenceGenerator(name = "reportparam_gen", sequenceName = "SEQ_KJC_REPORT_PARAMETERS", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "reportparam_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "KJC_REPORT", nullable = false)
	public KjcReports getKjcReports() {
		return this.kjcReports;
	}

	public void setKjcReports(KjcReports kjcReports) {
		this.kjcReports = kjcReports;
	}

	@Column(name = "NAME", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "IS_MANDATORY", precision = 1, scale = 0)
	public Boolean getIsMandatory() {
		return this.isMandatory;
	}

	public void setIsMandatory(Boolean isMandatory) {
		this.isMandatory = isMandatory;
	}

	@Column(name = "MIN_VALUE", precision = 22, scale = 0)
	public Integer getMinValue() {
		return this.minValue;
	}

	public void setMinValue(Integer minValue) {
		this.minValue = minValue;
	}

	@Column(name = "MAX_VALUE", precision = 22, scale = 0)
	public Integer getMaxValue() {
		return this.maxValue;
	}

	public void setMaxValue(Integer maxValue) {
		this.maxValue = maxValue;
	}

	@Column(name = "DEFAULT_VALUE")
	public String getDefaultValue() {
		return this.defaultValue;
	}

	public void setDefaultValue(String defaultValue) {
		this.defaultValue = defaultValue;
	}

	@Column(name = "POSITION")
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Column(name = "TYPE", nullable = false)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "UT_INSERT", updatable=false, nullable = false, precision = 10, scale = 0)
	@CreationUser
	public Integer getUtInsert() {
		return this.utInsert;
	}

	public void setUtInsert(Integer utInsert) {
		this.utInsert = utInsert;
	}

	@Column(name = "TS_INSERT", updatable=false, nullable = false)
	@org.hibernate.annotations.CreationTimestamp
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "UT_UPDATE", nullable = false, precision = 10, scale = 0)
	@UpdateUser
	public Integer getUtUpdate() {
		return this.utUpdate;
	}

	public void setUtUpdate(Integer utUpdate) {
		this.utUpdate = utUpdate;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	@org.hibernate.annotations.UpdateTimestamp
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@Column(name = "KEY", nullable = false, length = 50)
	public String getKey() {
		return this.key;
	}

	public void setKey(String key) {
		this.key = key;
	}

	@OneToMany(mappedBy = "kjcReportParameters")
	@LazyCollection(LazyCollectionOption.FALSE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcReportBookingParameters> getKjcReportBookingParameterses() {
		return this.kjcReportBookingParameterses;
	}

	public void setKjcReportBookingParameterses(List<KjcReportBookingParameters> kjcReportBookingParameterses) {
		this.kjcReportBookingParameterses = kjcReportBookingParameterses;
	}

	
	@ManyToOne
	@JoinColumn(name = "DEPENDENCY_PARAMETER")
	public KjcReportParameters getDependencyParameter() {
		return dependencyParameter;
	}

	public void setDependencyParameter(KjcReportParameters dependencyParameter) {
		this.dependencyParameter = dependencyParameter;
	}

	@Column(name = "PARAMETER_DEPENDENCY_FK_COLUMN", nullable = true, length = 50)
	public String getParameterDependencyFkColumn() {
		return parameterDependencyFkColumn;
	}

	public void setParameterDependencyFkColumn(String parameterDependencyFkColumn) {
		this.parameterDependencyFkColumn = parameterDependencyFkColumn;
	}

	@OneToMany(mappedBy = "dependencyParameter", fetch = FetchType.LAZY)
	public List<KjcReportParameters> getKjcReportParameterses() {
		return kjcReportParameterses;
	}

	public void setKjcReportParameterses(List<KjcReportParameters> kjcReportParameterses) {
		this.kjcReportParameterses = kjcReportParameterses;
	}

	@Column(name = "DB_TABLE", nullable = true, length = 50)
	public String getDbTable() {
		return dbTable;
	}

	public void setDbTable(String dbTable) {
		this.dbTable = dbTable;
	}

	@Column(name = "DB_COLUMN", nullable = true, length = 50)
	public String getDbColumn() {
		return dbColumn;
	}

	public void setDbColumn(String dbColumn) {
		this.dbColumn = dbColumn;
	}
	
	

	@Transient
	public String getDependencyParamName() {
		return dependencyParamName;
	}


	public void setDependencyParamName(String dependencyParamName) {
		this.dependencyParamName = dependencyParamName;
	}


	@Transient
	public Map<BigDecimal, String> getDropdownList() {
		return dropdownList;
	}

	@Transient
	public void setDropdownList(Map<BigDecimal, String> dropdownList) {
		this.dropdownList = dropdownList;
	}

	@Transient
	public String getValue() {
		return value;
	}

	@Transient
	public void setValue(String value) {
		this.value = value;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((dbColumn == null) ? 0 : dbColumn.hashCode());
		result = prime * result + ((dbTable == null) ? 0 : dbTable.hashCode());
		result = prime * result + ((dependencyParamName == null) ? 0 : dependencyParamName.hashCode());
		result = prime * result + ((dependencyParameter == null) ? 0 : dependencyParameter.hashCode());
		result = prime * result + ((description == null) ? 0 : description.hashCode());
		result = prime * result + ((isMandatory == null) ? 0 : isMandatory.hashCode());
		result = prime * result + ((maxValue == null) ? 0 : maxValue.hashCode());
		result = prime * result + ((minValue == null) ? 0 : minValue.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((parameterDependencyFkColumn == null) ? 0 : parameterDependencyFkColumn.hashCode());
		result = prime * result + ((position == null) ? 0 : position.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		KjcReportParameters other = (KjcReportParameters) obj;
		if (dbColumn == null) {
			if (other.dbColumn != null)
				return false;
		} else if (!dbColumn.equals(other.dbColumn))
			return false;
		if (dbTable == null) {
			if (other.dbTable != null)
				return false;
		} else if (!dbTable.equals(other.dbTable))
			return false;
		if (dependencyParamName == null) {
			if (other.dependencyParamName != null)
				return false;
		} else if (!dependencyParamName.equals(other.dependencyParamName))
			return false;
		if (dependencyParameter == null) {
			if (other.dependencyParameter != null)
				return false;
		} else if (!dependencyParameter.equals(other.dependencyParameter))
			return false;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (isMandatory == null) {
			if (other.isMandatory != null)
				return false;
		} else if (!isMandatory.equals(other.isMandatory))
			return false;
		if (maxValue == null) {
			if (other.maxValue != null)
				return false;
		} else if (!maxValue.equals(other.maxValue))
			return false;
		if (minValue == null) {
			if (other.minValue != null)
				return false;
		} else if (!minValue.equals(other.minValue))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (parameterDependencyFkColumn == null) {
			if (other.parameterDependencyFkColumn != null)
				return false;
		} else if (!parameterDependencyFkColumn.equals(other.parameterDependencyFkColumn))
			return false;
		if (position == null) {
			if (other.position != null)
				return false;
		} else if (!position.equals(other.position))
			return false;
		return true;
	}


	
	
	
}
