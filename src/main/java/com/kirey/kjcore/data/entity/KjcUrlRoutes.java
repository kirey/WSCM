package com.kirey.kjcore.data.entity;
// Generated 20-Oct-2016 11:22:32 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import com.kirey.kjcore.data.annotations.CreationUser;
import com.kirey.kjcore.data.annotations.UpdateUser;

/**
 * KjcUrlRoutes generated by hbm2java
 */
@Entity
@Table(name = "KJC_URL_ROUTES", uniqueConstraints = @UniqueConstraint(columnNames = "URL") )
public class KjcUrlRoutes implements java.io.Serializable {

	private static final long serialVersionUID = -1806546852706496384L;
	private Integer id;
	private String url;
	private String description;
	private Integer utInsert;
	private Date tsInsert;
	private Integer utUpdate;
	private Date tsUpdate;

	//@JsonBackReference
	private List<KjcApplicationRoles> kjcApplicationRoleses = new ArrayList<KjcApplicationRoles>(0);

	public KjcUrlRoutes() {
	}

	public KjcUrlRoutes(Integer id, String url, Integer utInsert, Date tsInsert, Integer utUpdate, Date tsUpdate) {
		this.id = id;
		this.url = url;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
	}

	public KjcUrlRoutes(Integer id, String url, Integer utInsert, Date tsInsert, Integer utUpdate, Date tsUpdate,
			List<KjcApplicationRoles> kjcApplicationRoleses) {
		this.id = id;
		this.url = url;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.kjcApplicationRoleses = kjcApplicationRoleses;
	}

	@Id
	@SequenceGenerator(name = "urlRoutes_gen", sequenceName = "SEQ_KJC_URL_ROUTES", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "urlRoutes_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "URL", unique = true, nullable = false)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}
		
	@Column(name = "DESCRIPTION", nullable = true)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "UT_INSERT", updatable=false, nullable = false, precision = 10, scale = 0)
	@CreationUser
	public Integer getUtInsert() {
		return this.utInsert;
	}

	public void setUtInsert(Integer utInsert) {
		this.utInsert = utInsert;
	}

	@Column(name = "TS_INSERT", updatable=false, nullable = false)
	@org.hibernate.annotations.CreationTimestamp
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "UT_UPDATE", nullable = false, precision = 10, scale = 0)
	@UpdateUser
	public Integer getUtUpdate() {
		return this.utUpdate;
	}

	public void setUtUpdate(Integer utUpdate) {
		this.utUpdate = utUpdate;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	@org.hibernate.annotations.UpdateTimestamp
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@ManyToMany//(fetch = FetchType.LAZY)
	@JoinTable(name = "KJC_ROLE_URL_ROUTES", joinColumns = {
			@JoinColumn(name = "KJC_URL_ROUTE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "KJC_APPLICATION_ROLE", nullable = false, updatable = false) })
	@LazyCollection(LazyCollectionOption.FALSE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcApplicationRoles> getKjcApplicationRoleses() {
		return this.kjcApplicationRoleses;
	}

	public void setKjcApplicationRoleses(List<KjcApplicationRoles> kjcApplicationRoleses) {
		this.kjcApplicationRoleses = kjcApplicationRoleses;
	}

}
