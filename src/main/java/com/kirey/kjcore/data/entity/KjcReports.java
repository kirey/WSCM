package com.kirey.kjcore.data.entity;
// Generated 18-Nov-2016 14:18:04 by Hibernate Tools 5.1.0.Beta1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.kirey.kjcore.data.annotations.CreationUser;
import com.kirey.kjcore.data.annotations.UpdateUser;

/**
 * KjcReports generated by hbm2java
 */
@Entity
@Table(name = "KJC_REPORTS", uniqueConstraints = @UniqueConstraint(columnNames = "NAME"))
public class KjcReports implements java.io.Serializable {
	private static final long serialVersionUID = 1582471727854408625L;
	
	private Integer id;
	
	private KjcClasses kjcClasses;
	
	/*@NotNull(message = ValidationErrorConstants.FORMAL_VAL_FIELD_REQUIRED)
	@NotBlank (message = ValidationErrorConstants.FORMAL_VAL_FIELD_REQUIRED)
	@Size(max = 15, message = ValidationErrorConstants.FORMAL_VAL_REPORT_MANAGEMENT_NAME)*/
	private String name;
	
	/*@NotNull(message = ValidationErrorConstants.FORMAL_VAL_FIELD_REQUIRED)
	@NotBlank (message = ValidationErrorConstants.FORMAL_VAL_FIELD_REQUIRED)
	@Size(max = 50, message = ValidationErrorConstants.FORMAL_VAL_REPORT_MANAGEMENT_DESCRIPTION)*/
	private String description;
	
	/*@NotNull(message = ValidationErrorConstants.FORMAL_VAL_FIELD_REQUIRED)
	@NotBlank (message = ValidationErrorConstants.FORMAL_VAL_FIELD_REQUIRED)*/
	private String type;
	
	private Long avgExecTime;
	private Long numExecution;
	private Integer utInsert;
	private Date tsInsert;
	private Integer utUpdate;
	private Date tsUpdate;
	private boolean flEnabled;
//	private KjcCompanies kjcCompany;
	
	@JsonManagedReference(value = "report_blobs")
	private List<KjcReportBlobs> kjcReportBlobses = new ArrayList<KjcReportBlobs>(0);
	
	@JsonIgnore
	private List<KjcReportBookings> kjcReportBookingses = new ArrayList<KjcReportBookings>(0);
	
	@JsonManagedReference(value = "report_parameters")
	private List<KjcReportParameters> kjcReportParameterses = new ArrayList<KjcReportParameters>(0);

	private List<KjcApplicationRoles> kjcApplicationRoleses = new ArrayList<KjcApplicationRoles>();
	
	private List<KjcCompanies> kjcCompanieses = new ArrayList<KjcCompanies>();
	
	public KjcReports() {
	}

	public KjcReports(Integer id, String name, String type, Integer utInsert, Date tsInsert, Integer utUpdate,
			Date tsUpdate) {
		this.id = id;
		this.name = name;
		this.type = type;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
	}

	public KjcReports(Integer id, KjcClasses kjcClasses, String name, String description, String type, Long avgExecTime,
			Long numExecution, Integer utInsert, Date tsInsert, Integer utUpdate, Date tsUpdate,
			List<KjcReportBlobs> kjcReportBlobses, List<KjcReportBookings> kjcReportBookingses,
			List<KjcReportParameters> kjcReportParameterses) {
		this.id = id;
		this.kjcClasses = kjcClasses;
		this.name = name;
		this.description = description;
		this.type = type;
		this.avgExecTime = avgExecTime;
		this.numExecution = numExecution;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.kjcReportBlobses = kjcReportBlobses;
		this.kjcReportBookingses = kjcReportBookingses;
		this.kjcReportParameterses = kjcReportParameterses;
	}

	@Id
	@SequenceGenerator(name = "report_gen", sequenceName = "SEQ_KJC_REPORTS", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "report_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne
	@JoinColumn(name = "VALIDATION_CLASS")
	public KjcClasses getKjcClasses() {
		return this.kjcClasses;
	}

	public void setKjcClasses(KjcClasses kjcClasses) {
		this.kjcClasses = kjcClasses;
	}

	@Column(name = "NAME", unique = true, nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "TYPE", nullable = false, length = 20)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "AVG_EXEC_TIME", precision = 22, scale = 0)
	public Long getAvgExecTime() {
		return this.avgExecTime;
	}

	public void setAvgExecTime(Long avgExecTime) {
		this.avgExecTime = avgExecTime;
	}

	@Column(name = "NUM_EXECUTION", precision = 10, scale = 0)
	public Long getNumExecution() {
		return this.numExecution;
	}

	public void setNumExecution(Long numExecution) {
		this.numExecution = numExecution;
	}

	@Column(name = "UT_INSERT", updatable=false, nullable = false, precision = 10, scale = 0)
	@CreationUser
	public Integer getUtInsert() {
		return this.utInsert;
	}

	public void setUtInsert(Integer utInsert) {
		this.utInsert = utInsert;
	}

	@Column(name = "TS_INSERT", updatable=false, nullable = false)
	@org.hibernate.annotations.CreationTimestamp
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "UT_UPDATE", nullable = false, precision = 10, scale = 0)
	@UpdateUser
	public Integer getUtUpdate() {
		return this.utUpdate;
	}

	public void setUtUpdate(Integer utUpdate) {
		this.utUpdate = utUpdate;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	@org.hibernate.annotations.UpdateTimestamp
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@OneToMany(mappedBy = "kjcReports")
	@LazyCollection(LazyCollectionOption.FALSE)
	@Cascade(value = CascadeType.ALL)
    @Fetch(FetchMode.SUBSELECT)
	public List<KjcReportBlobs> getKjcReportBlobses() {
		return this.kjcReportBlobses;
	}

	public void setKjcReportBlobses(List<KjcReportBlobs> kjcReportBlobses) {
		this.kjcReportBlobses = kjcReportBlobses;
	}

	@OneToMany(mappedBy = "kjcReports")
	@LazyCollection(LazyCollectionOption.FALSE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcReportBookings> getKjcReportBookingses() {
		return this.kjcReportBookingses;
	}

	public void setKjcReportBookingses(List<KjcReportBookings> kjcReportBookingses) {
		this.kjcReportBookingses = kjcReportBookingses;
	}
	
	@OneToMany(mappedBy = "kjcReports")
	@LazyCollection(LazyCollectionOption.FALSE)
	@Cascade(value = CascadeType.ALL)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcReportParameters> getKjcReportParameterses() {
		return this.kjcReportParameterses;
	}

	public void setKjcReportParameterses(List<KjcReportParameters> kjcReportParameterses) {
		this.kjcReportParameterses = kjcReportParameterses;
	}
	
	@Column(name = "FL_ENABLED", nullable = false, precision = 1, scale = 0)
	public boolean isFlEnabled() {
		return this.flEnabled;
	}

	public void setFlEnabled(boolean flEnabled) {
		this.flEnabled = flEnabled;
	}

	@ManyToMany
	@JoinTable(name = "KJC_ROLE_REPORTS", joinColumns = {
			@JoinColumn(name = "KJC_REPORT", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "KJC_APPLICATION_ROLE", nullable = false, updatable = false) })
	@LazyCollection(LazyCollectionOption.FALSE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcApplicationRoles> getKjcApplicationRoleses() {
		return kjcApplicationRoleses;
	}

	public void setKjcApplicationRoleses(List<KjcApplicationRoles> kjcApplicationRoleses) {
		this.kjcApplicationRoleses = kjcApplicationRoleses;
	}

	@ManyToMany
	@JoinTable(name = "KJC_COMPANY_REPORTS", joinColumns = {
			@JoinColumn(name = "KJC_REPORT", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "KJC_COMPANY", nullable = false, updatable = false) })
	@LazyCollection(LazyCollectionOption.FALSE)
	@Fetch(FetchMode.SUBSELECT)
	public List<KjcCompanies> getKjcCompanieses() {
		return kjcCompanieses;
	}

	public void setKjcCompanieses(List<KjcCompanies> kjcCompanieses) {
		this.kjcCompanieses = kjcCompanieses;
	}

	
	
}
