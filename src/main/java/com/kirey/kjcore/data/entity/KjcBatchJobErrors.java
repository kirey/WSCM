package com.kirey.kjcore.data.entity;
// Generated Nov 3, 2016 2:10:13 PM by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * KjcBatchJobErrors generated by hbm2java.
 */
@Entity
@Table(name = "KJC_BATCH_JOB_ERRORS")
public class KjcBatchJobErrors implements java.io.Serializable {

	private static final long serialVersionUID = -7843321790520153764L;

	private Integer id;
	private Long batchJobId;
	private String errorCode;
	private String errorMessage;
	private String taskId;
	private Date thrownDate;
	private String username;
	
	@JsonManagedReference(value = "batchErrorParams")
	private List<KjcBatchJobErrorParams> kjcBatchJobErrorParamses = new ArrayList<KjcBatchJobErrorParams>(0);

	public KjcBatchJobErrors() {
	}

	public KjcBatchJobErrors(Integer id, Long batchJobId, String errorCode,  Date thrownDate, String username) {
		this.id = id;
		this.batchJobId = batchJobId;
		this.errorCode = errorCode;
		this.thrownDate = thrownDate;
		this.username = username;
	}

	public KjcBatchJobErrors(Integer id, Long batchJobId, String errorCode, String taskId,
			List<KjcBatchJobErrorParams> kjcBatchJobErrorParamses) {
		this.id = id;
		this.batchJobId = batchJobId;
		this.errorCode = errorCode;
		this.taskId = taskId;
		this.kjcBatchJobErrorParamses = kjcBatchJobErrorParamses;
	}

	@Id
	@SequenceGenerator(name = "err_batch_gen", sequenceName = "SEQ_KJC_BATCH_JOB_ERRORS", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "err_batch_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "BATCH_JOB_ID", nullable = false, scale = 0)
	public Long getBatchJobId() {
		return this.batchJobId;
	}

	/**
	 * The class is used for batch mechanism and it is managed by framework, if
	 * the method is used, anyway the value will be overwritten.
	 * 
	 * @param batchJobId
	 *
	 */
	public void setBatchJobId(Long batchJobId) {
		this.batchJobId = batchJobId;
	}

	@Column(name = "ERROR_CODE", nullable = false, length = 20)
	public String getErrorCode() {
		return this.errorCode;
	}

	public void setErrorCode(String errorCode) {
		this.errorCode = errorCode;
	}

	@Column(name = "ERROR_MESSAGE", length = 4000)
	public String getErrorMessage() {
		return errorMessage;
	}

	/**
	 * It must be internationalized.
	 * <p>
	 * example : njamb.validation.business.errorCode.bljab
	 * 
	 * @param errorMessage
	 * 
	 */
	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	@Column(name = "TASK_ID", length = 50)
	public String getTaskId() {
		return taskId;
	}

	/**
	 *
	 * @param taskId
	 *            - indicates which item processed by job was failed
	 * 
	 */
	public void setTaskId(String taskId) {
		this.taskId = taskId;
	}

	@Column(name = "THROWN_DATE", nullable = false, length = 7)
	public Date getThrownDate() {
		return this.thrownDate;
	}

	/**
	 * The class is used for batch mechanism and it is managed by framework, if
	 * the method is used, anyway the value will be overwritten.
	 * 
	 * @param thrownDate
	 *
	 */
	public void setThrownDate(Date thrownDate) {
		this.thrownDate = thrownDate;
	}
	
	@Column(name = "USERNAME", nullable = false)
	public String getUsername() {
		return username;
	}

	/**
	 * The class is used for batch mechanism and it is managed by framework, if
	 * the method is used, anyway the value will be overwritten.
	 * 
	 * @param username
	 *
	 */
	public void setUsername(String username) {
		this.username = username;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "kjcBatchJobErrors", cascade = CascadeType.ALL)
	public List<KjcBatchJobErrorParams> getKjcBatchJobErrorParamses() {
		return this.kjcBatchJobErrorParamses;
	}

	public void setKjcBatchJobErrorParamses(List<KjcBatchJobErrorParams> kjcBatchJobErrorParamses) {
		this.kjcBatchJobErrorParamses = kjcBatchJobErrorParamses;
	}
}
