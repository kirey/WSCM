package com.kirey.kjcore.data.entity;
// Generated 20-Oct-2016 11:22:32 by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.Digits;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotBlank;

import com.kirey.kjcore.common.constants.ValidationErrorConstants;
import com.kirey.kjcore.data.annotations.CreationUser;
import com.kirey.kjcore.data.annotations.UpdateUser;

/**
 * KjcEmailConfigs generated by hbm2java
 */
@Entity
@Table(name = "KJC_EMAIL_CONFIGS")
public class KjcEmailConfigs implements java.io.Serializable {

	private static final long serialVersionUID = -4546350748483329736L;
	private Integer id;
	
	@NotBlank(message=ValidationErrorConstants.VALIDATION_BUSINESS_EMAIL_CONFIG_FIELD_CANNOT_BE_EMPTY)
	@Size(min=1,max=255, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_NAME)
	private String name;	
	
	@NotBlank(message=ValidationErrorConstants.VALIDATION_BUSINESS_EMAIL_CONFIG_FIELD_CANNOT_BE_EMPTY)
	@Size(min=1, max=255, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_USERNAME)
	private String username;
	
	@NotBlank(message=ValidationErrorConstants.VALIDATION_BUSINESS_EMAIL_CONFIG_FIELD_CANNOT_BE_EMPTY)
	@Size(min=1, max=255, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_PASSCODE)
	private String password;
	
	@NotBlank(message=ValidationErrorConstants.VALIDATION_BUSINESS_EMAIL_CONFIG_FIELD_CANNOT_BE_EMPTY)
	@Size(min=1, max=255, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_HOST)
	private String host;
	
	@Digits(fraction = 0, integer = 10, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_PORT)
	private Integer port;
	
	private Integer utInsert;
	private Date tsInsert;
	private Integer utUpdate;
	private Date tsUpdate;
	
	@NotBlank(message=ValidationErrorConstants.VALIDATION_BUSINESS_EMAIL_CONFIG_FIELD_CANNOT_BE_EMPTY)
	@Size(min=1, max=255, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_EMAIL_ADDRESS)
	private String emailAddress;
	
	@NotBlank(message=ValidationErrorConstants.VALIDATION_BUSINESS_EMAIL_CONFIG_FIELD_CANNOT_BE_EMPTY)
	@Size(min=1, max=255, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_MESSAGE_FROM)
	private String messageFrom;
	
	@Size(max=1000, message=ValidationErrorConstants.VALIDATION_FORMAL_EMAIL_CONFIG_DESCRIPTION)
	private String description;

	public KjcEmailConfigs() {
	}
	
	public KjcEmailConfigs(Integer id, String name, String username, String password, String host, Integer port,
			Integer utInsert, Date tsInsert, Integer utUpdate, Date tsUpdate, String emailAddress, String messageFrom) {
		this.id = id;
		this.name = name;
		this.username = username;
		this.password = password;
		this.host = host;
		this.port = port;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.emailAddress = emailAddress;
		this.messageFrom = messageFrom;
	}

	public KjcEmailConfigs(Integer id, String name, String username, String password, String host, Integer port,
			Integer utInsert, Date tsInsert, Integer utUpdate, Date tsUpdate, String emailAddress, String messageFrom,
			String description) {
		this.id = id;
		this.name = name;
		this.username = username;
		this.password = password;
		this.host = host;
		this.port = port;
		this.utInsert = utInsert;
		this.tsInsert = tsInsert;
		this.utUpdate = utUpdate;
		this.tsUpdate = tsUpdate;
		this.emailAddress = emailAddress;
		this.messageFrom = messageFrom;
		this.description = description;
	}

	@Id
	@SequenceGenerator(name = "SEQ_KJC_EMAIL_CONFIGS_GEN", sequenceName = "SEQ_KJC_EMAIL_CONFIGS", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_KJC_EMAIL_CONFIGS_GEN")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NAME", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "USERNAME", nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "PASSWORD", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "HOST", nullable = false)
	public String getHost() {
		return this.host;
	}

	public void setHost(String host) {
		this.host = host;
	}

	@Column(name = "PORT", nullable = false, precision = 10, scale = 0)
	public Integer getPort() {
		return this.port;
	}

	public void setPort(Integer port) {
		this.port = port;
	}

	@Column(name = "UT_INSERT", updatable=false, nullable = false, precision = 10, scale = 0)
	@CreationUser
	public Integer getUtInsert() {
		return this.utInsert;
	}

	public void setUtInsert(Integer utInsert) {
		this.utInsert = utInsert;
	}

	@Column(name = "TS_INSERT", updatable=false, nullable = false)
	@org.hibernate.annotations.CreationTimestamp
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "UT_UPDATE", nullable = false, precision = 10, scale = 0)
	@UpdateUser
	public Integer getUtUpdate() {
		return this.utUpdate;
	}

	public void setUtUpdate(Integer utUpdate) {
		this.utUpdate = utUpdate;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	@org.hibernate.annotations.UpdateTimestamp
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@Column(name = "EMAIL_ADDRESS", nullable = false)
	public String getEmailAddress() {
		return this.emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	@Column(name = "MESSAGE_FROM", nullable = false)
	public String getMessageFrom() {
		return this.messageFrom;
	}

	public void setMessageFrom(String messageFrom) {
		this.messageFrom = messageFrom;
	}

	@Column(name = "DESCRIPTION", length = 1000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
}
