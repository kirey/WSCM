<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


	<!-- <batch:job id="jobExample_Partitioning" restartable="true" parent="parentJob">
		master step, 10 threads (grid-size)
		<batch:step id="masterStep">
			<batch:partition step="slave" partitioner="rangePartitioner">
				<batch:handler grid-size="10" task-executor="taskExecutorPartitioning" />
			</batch:partition>
		</batch:step>
	</batch:job> -->

	<!-- each thread will run this job, with different stepExecutionContext 
		values. -->
	<!-- <batch:step id="slave">
		<batch:tasklet>
			<batch:chunk reader="pagingItemReader" writer="flatFileItemWriter"
				processor="itemProcessor" commit-interval="1" />
		</batch:tasklet>
	</batch:step> -->

	<!-- <bean id="rangePartitioner" class="com.kirey.kjcore.features.scheduling.jobs.partitioner.RangePartitioner" />

	<bean id="taskExecutorPartitioning" class="org.springframework.core.task.SimpleAsyncTaskExecutor" /> -->



	 <!-- inject stepExecutionContext -->
	<!-- <bean id="itemProcessor" class="com.kirey.kjcore.features.scheduling.jobs.processor.PartitioningExampleProcessor"
		scope="step">
		<property name="threadName" value="#{stepExecutionContext[name]}" />
	</bean>

	<bean id="pagingItemReader"
		class="org.springframework.batch.item.database.JdbcPagingItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="queryProvider">
			<bean
				class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="dataSource" />
				<property name="selectClause" value="select * " />
				<property name="fromClause" value="from BATCH_JOB_INSTANCE" />
				<property name="whereClause" value="where JOB_INSTANCE_ID>=:fromId and JOB_INSTANCE_ID &lt;=:toId" />
				<property name="sortKey" value="JOB_INSTANCE_ID" />
			</bean>
		</property> -->
		<!-- Inject via the ExecutionContext in rangePartitioner -->
		<!-- <property name="parameterValues">
			<map>
				<entry key="fromId" value="#{stepExecutionContext[fromId]}" />
				<entry key="toId" value="#{stepExecutionContext[toId]}" />
			</map>
		</property>
		<property name="pageSize" value="10" />
		<property name="rowMapper">
			<bean class="com.kirey.kjcore.features.scheduling.jobs.mapper.PartitioningRowMapper" />
		</property>
	</bean> -->

	<!-- csv file writer -->
	<!-- <bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		<property name="resource"
			value="#{jobParameters[outputFile]}-#{stepExecutionContext[fromId]}-#{stepExecutionContext[toId]}-#{jobParameters[timeStamp]}.csv" />
		<property name="appendAllowed" value="false" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="jobInstanceId, jobName, version" />
					</bean>
				</property>
			</bean>
		</property>
	</bean> -->
	
	<!-- schedulling -->
	<!-- <bean id="loggerTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="1" />
		<property name="maxPoolSize" value="1" />
	</bean> -->
	


</beans>